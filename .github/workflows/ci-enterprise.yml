name: CI – Enterprise Gates

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write
  actions: read

concurrency:
  group: ci-enterprise-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Quality Gate (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install base tools
        run: |
          python -m pip install --upgrade pip wheel
          pip install ruff mypy pytest pytest-cov bandit pip-audit

      - name: Ruff (lint)
        run: |
          ruff --version
          ruff check .

      - name: Mypy (best-effort)
        run: |
          mypy --version
          mypy . || echo "::warning::mypy reported issues (best-effort, not blocking)"

      - name: Run tests with coverage
        run: |
          pytest -q --maxfail=1 --disable-warnings --cov --cov-report=xml --cov-report=term
        env:
          PYTHONWARNINGS: ignore

      - name: Bandit (security)
        run: |
          bandit -r . -q -f txt -o bandit.txt || true

      - name: pip-audit (vulns)
        run: |
          pip-audit -f json -o pip-audit.json || true

      - name: Trivy FS scan → SARIF
        uses: aquasecurity/trivy-action@0.27.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          exit-code: '0'
          format: 'sarif'
          output: 'trivy.sarif'

      - name: Upload SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif

      - name: Upload artifacts (coverage & reports)
        uses: actions/upload-artifact@v4
        with:
          name: enterprise-artifacts-${{ matrix.os }}
          path: |
            coverage.xml
            bandit.txt
            pip-audit.json
            trivy.sarif
          if-no-files-found: ignore
