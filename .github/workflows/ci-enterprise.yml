name: CI – Enterprise
on:
  push:
    branches: [ feat/ci-enterprise ]
  pull_request:
    branches: [ main, feat/ci-enterprise ]
permissions:
  contents: read
  security-events: write
concurrency:
  group: ci-enterprise-${{ github.ref }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true
jobs:
  quality:
    name: quality / ${{ matrix.os }} / py${{ matrix.py }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        py: ["3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
          cache: pip
      - name: Install dev deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then
  if [ -f requirements-dev.txt ]; then
  pip install -r requirements-dev.txt
else
  pip install ruff mypy pytest pytest-cov bandit pip-audit
fi
else
  pip install ruff mypy pytest pytest-cov bandit pip-audit
fi
        shell: bash
      - name: Ruff (lint)
        run: ruff check .
      - name: Ruff (format check)
        run: ruff format --check .
      - name: Mypy (best-effort)
        run: mypy . || true
      - name: PyTest + Coverage (no-tests tolerant)
        shell: bash
        run: |
          set -eo pipefail
          pytest --maxfail=1 --disable-warnings --cov=app --cov-report=xml || code=$?
          if [ "${code:-0}" = "5" ]; then
            echo '<?xml version="1.0"?><coverage line-rate="0" branch-rate="0" version="1.0"></coverage>' > coverage.xml
            code=0
          fi
          exit ${code:-0}
      - name: Upload coverage.xml
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage.xml-${{ matrix.os }}
          path: coverage.xml
      - name: Bandit (SAST)
        run: bandit -q -r . || true
      - name: pip-audit (supply chain)
        run: pip-audit -f json -o pip-audit.json || true
      - name: Upload pip-audit.json
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-${{ matrix.os }}
          path: pip-audit.json
      - name: Trivy FS (SARIF)
        uses: aquasecurity/trivy-action@0.22.0
        with:
          scan-type: fs
          format: sarif
          output: trivy-results.sarif
          ignore-unfixed: true
        continue-on-error: true
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif


