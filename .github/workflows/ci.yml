name: CI
on: [push, pull_request, workflow_dispatch]
permissions:
  contents: read
jobs:
  lint-type:
    name: Lint & Typecheck
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10","3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt','pyproject.toml','.pre-commit-config.yaml') }}
      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f pyproject.toml ]; then pip install -e .; fi
          pip install pre-commit mypy bandit
      - name: Pre-commit (black/isort/flake8)
        run: pre-commit run --all-files
      - name: Mypy
        run: mypy .
      - name: Bandit
        run: bandit -q -r .

  tests:
    name: Tests & Coverage
    runs-on: ubuntu-latest
    needs: lint-type
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov coverage
      - name: Pytest
        run: pytest --maxfail=1 --disable-warnings -q --cov=. --cov-report=xml
      - name: Store coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml