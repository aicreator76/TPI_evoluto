name: CI Cataloghi

on:
  pull_request:
    paths:
      - "app/**"
      - "tests/**"
      - "migrations/**"
      - ".github/workflows/**"
      - "requirements*.txt"
      - "pyproject.toml"
  push:
    branches: [ main ]
    paths:
      - "app/**"
      - "tests/**"
      - "migrations/**"
      - ".github/workflows/**"
      - "requirements*.txt"
      - "pyproject.toml"

permissions:
  contents: write

jobs:
  ci:
    name: test-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        shell: pwsh
        run: |
          python -m pip install -U pip
          if (Test-Path requirements.txt) { pip install -r requirements.txt }
          if (Test-Path requirements-dev.txt) { pip install -r requirements-dev.txt }
          pip install ruff pytest pytest-cov pip-audit bandit detect-secrets

      - name: Lint (ruff)
        shell: pwsh
        run: ruff check .

      - name: Tests + Coverage (cataloghi)
        shell: pwsh
        run: |
          pytest -q --maxfail=1 --disable-warnings `
            --cov=app.cataloghi --cov-report=xml --cov-report=term

      - name: Enforce coverage >= 70%
        shell: pwsh
        run: |
          [xml]$cov = Get-Content coverage.xml
          $rate = [double]$cov.coverage.'line-rate' * 100
          "{0:n2}" -f $rate | Write-Host
          if ($rate -lt 70) {
            Write-Error "Coverage ${rate}% < 70%"; exit 1
          } else { Write-Host "Coverage OK: ${rate}%" }

      - name: pip-audit
        shell: pwsh
        run: pip-audit -r requirements.txt
        if: hashFiles('requirements.txt') != ''

      - name: Bandit (security)
        shell: pwsh
        run: |
          bandit -r app -x tests -q -o bandit.txt -f txt
          if ((Get-Content bandit.txt | Select-String -SimpleMatch "HIGH").Count -gt 0) {
            Write-Error "Bandit HIGH findings"; exit 1
          }

      - name: Detect-Secrets (best effort)
        shell: pwsh
        continue-on-error: true
        run: detect-secrets scan --all-files

      - name: Upload artifacts (reports)
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ matrix.os }}
          path: |
            coverage.xml
            bandit.txt
            reject-log*.csv

  release:
    name: tag-and-release
    needs: [ci]
    if: github.ref == 'refs/heads/main' && needs.ci.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Make tag name
        id: tag
        run: echo "TAG=Snapshot-OK-$(date +%F)" >> $GITHUB_ENV

      - name: Create tag
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag "$TAG" -f
          git push origin "$TAG" --force

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.TAG }}
          body: |
            Scope: Cataloghi (/v1)
            Breaking: none
            Notes: CI green (matrix), coverage≥70%, SAST pass, artifacts attached.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
